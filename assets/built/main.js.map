{"version":3,"sources":["infinitescroll.js","jquery.fitvids.js"],"names":["$","currentPage","pathname","window","location","$document","document","$result","buffer","ticking","isLoading","lastScrollY","scrollY","lastWindowHeight","innerHeight","lastDocumentHeight","height","onScroll","requestTick","onResize","requestAnimationFrame","infiniteScroll","path","paginationRegex","replace","match","parseInt","maxPages","removeEventListener","passive","nextPage","get","content","posts","createRange","createContextualFragment","querySelectorAll","length","forEach","call","post","appendChild","fail","xhr","status","always","addEventListener","fn","fitVids","options","settings","customSelector","ignore","getElementById","head","getElementsByTagName","div","createElement","innerHTML","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","$this","parents","tagName","toLowerCase","parent","css","isNaN","attr","aspectRatio","width","videoName","_count","wrap","removeAttr","jQuery","Zepto"],"mappings":"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","file":"assets/built/main.js","sourcesContent":["/* global maxPages */\n\n// Code snippet inspired by https://github.com/douglasrodrigues5/ghost-blog-infinite-scroll\n$(function ($) {\n    var currentPage = 1;\n    var pathname = window.location.pathname;\n    var $document = $(document);\n    var $result = $('.post-feed');\n    var buffer = 300;\n\n    var ticking = false;\n    var isLoading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = $document.height();\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = $document.height();\n        requestTick();\n    }\n\n    function requestTick() {\n        if (!ticking) {\n            requestAnimationFrame(infiniteScroll);\n        }\n        ticking = true;\n    }\n\n    function sanitizePathname(path) {\n        var paginationRegex = /(?:page\\/)(\\d)(?:\\/)$/i;\n\n        // remove hash params from path\n        path = path.replace(/#(.*)$/g, '').replace('////g', '/');\n\n        // remove pagination from the path and replace the current pages\n        // with the actual requested page. E. g. `/page/3/` indicates that\n        // the user actually requested page 3, so we should request page 4\n        // next, unless it's the last page already.\n        if (path.match(paginationRegex)) {\n            currentPage = parseInt(path.match(paginationRegex)[1]);\n\n            path = path.replace(paginationRegex, '');\n        }\n\n        return path;\n    }\n\n    function infiniteScroll() {\n        // sanitize the pathname from possible pagination or hash params\n        pathname = sanitizePathname(pathname);\n\n        // return if already loading\n        if (isLoading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        /**\n        * maxPages is defined in default.hbs and is the value\n        * of the amount of pagination pages.\n        * If we reached the last page or are past it,\n        * we return and disable the listeners.\n        */\n        if (currentPage >= maxPages) {\n            window.removeEventListener('scroll', onScroll, {passive: true});\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        isLoading = true;\n\n        // next page\n        currentPage += 1;\n\n        // Load more\n        var nextPage = pathname + 'page/' + currentPage + '/';\n\n        $.get(nextPage, function (content) {\n            var parse = document.createRange().createContextualFragment(content);\n            var posts = parse.querySelectorAll('.post');\n            if (posts.length) {\n                [].forEach.call(posts, function (post) {\n                    $result[0].appendChild(post);\n                });\n            }\n        }).fail(function (xhr) {\n            // 404 indicates we've run out of pages\n            if (xhr.status === 404) {\n                window.removeEventListener('scroll', onScroll, {passive: true});\n                window.removeEventListener('resize', onResize);\n            }\n        }).always(function () {\n            lastDocumentHeight = $document.height();\n            isLoading = false;\n            ticking = false;\n        });\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    infiniteScroll();\n});\n","/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n"],"sourceRoot":"/source/"}